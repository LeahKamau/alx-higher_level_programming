The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

Importing class from the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Passing a postive value to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)


Passing 0 to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

Passing negative value to integer_validator
	>>> bg = BaseGeometry()
        >>> bg.integer_validator("name", -2)                                                                                                               
	Traceback (most recent call last):
	ValueError: name must be greater than 0

Passing a non_integer to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", "2")
	Traceback (most recent call last):
	TypeError: name must be an integer

Passing no arguments to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Print the area
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

Passing 1 argument to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Passing three arguments to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 2, 4)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given
